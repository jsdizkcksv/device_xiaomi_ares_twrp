name: TWRP - Build

# Credits to:
# https://github.com/TeamWin
# https://gitlab.com/OrangeFox
# https://github.com/azwhikaru for Recovery Builder Template
# https://github.com/carlodandan for Recovery Builder Template
# And all Contributors in every repositories I used

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'TWRP Manifest'
        required: true
        default: 'https://github.com/ymdzq/manifest_twrp'
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE:
        description: 'TWRP Device Tree'
        required: true
        default: 'https://github.com/jsdizkcksv/twrp_device_xiaomi_ares'
      DEVICE_TREE_BRANCH:
        description: 'TWRP Device Tree Branch'
        required: true
        default: 'android-13+'
      DEVICE_PATH:
        description: 'Specify your Device Path'
        required: true
        default: 'device/xiaomi/ares'
      DEVICE_NAME:
        description: 'Specify your Device Codename'
        required: true
        default: 'ares'
      MAKEFILE_NAME:
        description: 'Specify your Device Makefile Name'
        required: true
        default: 'twrp_ares'
        type: choice
        options:
        - twrp_ares
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'boot'
        type: choice
        options:
        - boot
        - recovery
        - vendorboot

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 24

    - name: Build Environment
      run: |
        sudo apt install aria2 -y
        git clone https://github.com/akhilnarang/scripts.git -b master
        cd scripts
        sudo bash setup/android_build_env.sh

    - name: Set-up Manifest
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/twrp
        cd ${GITHUB_WORKSPACE}/twrp
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        repo init --depth=1 -u ${{ inputs.MANIFEST_URL }} -b ${{ inputs.MANIFEST_BRANCH }}
        repo sync -j$(nproc --all) --force-sync

    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/twrp
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} ./${{ inputs.DEVICE_PATH }}
        cd ${{ inputs.DEVICE_PATH }}
        echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV


    - name: Building TWRP
      run: |
        cd ${GITHUB_WORKSPACE}/twrp
        set +e
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        lunch ${{ inputs.MAKEFILE_NAME }}-eng && make clean && mka adbd ${{ inputs.BUILD_TARGET }}image -j$(nproc --all)

    - name: Set Release Properties
      run: |
        echo "BUILD_DATE=$(TZ=Asia/Manila date +%Y%m%d)" >> $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}/twrp

        if [ ${{ inputs.BUILD_TARGET }} == 'recovery' ]; then
           echo "BUILD_TARGET_NAME=recovery" >> $GITHUB_ENV
        elif [ ${{ inputs.BUILD_TARGET }} == 'boot' ]; then
           echo "BUILD_TARGET_NAME=boot" >> $GITHUB_ENV
        else
           echo "BUILD_TARGET_NAME=vendor_boot" >> $GITHUB_ENV
        fi

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          twrp/out/target/product/${{ inputs.DEVICE_NAME }}/${{ env.BUILD_TARGET_NAME }}.img
          twrp/out/target/product/${{ inputs.DEVICE_NAME }}/*.zip
        name: Unofficial TWRP for ${{ inputs.MAKEFILE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          ## TWRP Build - Unofficial
          Build: ${{ inputs.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
